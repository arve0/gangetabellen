{"version":3,"sources":["../src/actions.js"],"names":[],"mappings":";;;;;QAEgB,a,GAAA,a;QAyBA,I,GAAA,I;;AA3BhB;;AAEO,SAAS,aAAT,CAAwB,KAAxB,EAA+B;AACrC,QAAO,UAAC,GAAD,EAAM,GAAN,EAAc;AAAA,wBACH,MAAM,QAAN,EADG;;AAAA,MACZ,IADY,mBACZ,IADY;;AAEpB,MAAI,SAAS,MAAb,EAAqB;AACpB,oBAAiB,KAAjB;AACA,GAFD,MAEO;AACN,SAAM,QAAN,CAAe,EAAE,MAAM,gBAAR,EAA0B,OAAO,GAAjC,EAAsC,QAAtC,EAAf;;AADM,0BAEsB,MAAM,QAAN,EAFtB;;AAAA,OAEE,KAFF,oBAEE,KAFF;AAAA,OAES,QAFT,oBAES,QAFT;;AAGN,OAAI,UAAU,SAAS,MAAvB,EAA+B;AAC9B;AACA,qBAAiB,KAAjB;AACA;AACD;AACD,EAZD;AAaA;;AAED,SAAS,gBAAT,CAA2B,KAA3B,EAAkC;AAAA,wBAChB,MAAM,QAAN,EADgB;;AAAA,KACzB,IADyB,oBACzB,IADyB;;AAEjC,KAAM,iBAAiB,KAAK,KAAL,CAAW,KAAK,CAAL,EAAQ,MAAR,GAAiB,KAAK,MAAL,EAA5B,CAAvB;AACA,OAAM,QAAN,CAAe;AACd,QAAM,UADQ;AAEd,YAAU,KAAK,CAAL,EAAQ,cAAR;AAFI,EAAf;AAIA;;AAEM,SAAS,IAAT,CAAe,KAAf,EAAsB;AAC5B,QAAO,YAAM;AACZ,MAAM,IAAI,MAAM,QAAN,GAAiB,IAAjB,CAAsB,CAAtB,EAAyB,MAAnC;AACA,UAAQ,GAAR,YAAqB,CAArB,iBAAkC,IAAI,CAAL,GAAU,OAAV,GAAkB,EAAnD;AACA,UAAQ,IAAR;AACA,EAJD;AAKA;;AAED,SAAS,uBAAT,CAAkC,KAAlC,EAAyC,KAAzC,EAAgD,CAE/C","file":"actions.js","sourcesContent":["import { correct } from './sounds.js'\n\nexport function questionInput (store) {\n\treturn (str, key) => {\n\t\tconst { mode } = store.getState()\n\t\tif (mode === 'info') {\n\t\t\tpickNextQuestion(store)\n\t\t} else {\n\t\t\tstore.dispatch({ type: 'QUESTION_INPUT', input: str, key })\n\t\t\tconst { input, question } = store.getState()\n\t\t\tif (input === question.answer) {\n\t\t\t\tcorrect()\n\t\t\t\tpickNextQuestion(store)\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction pickNextQuestion (store) {\n\tconst { bins } = store.getState()\n\tconst randomQuestion = Math.floor(bins[0].length * Math.random())\n\tstore.dispatch({\n\t\ttype: 'QUESTION',\n\t\tquestion: bins[0][randomQuestion]\n\t})\n}\n\nexport function exit (store) {\n\treturn () => {\n\t\tconst l = store.getState().bins[1].length\n\t\tconsole.log(`\\nGot ${l} correct${(l > 1) ? ' ones':''}.`)\n\t\tprocess.exit()\n\t}\n}\n\nfunction getRandomQuestionAnswer (above, below) {\n\t\n}"]}