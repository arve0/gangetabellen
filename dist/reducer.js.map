{"version":3,"sources":["../src/reducer.js"],"names":[],"mappings":";;;;;;;;kBAgBwB,O;;AAhBxB;;;;AACA;;;;;;AAMA,IAAM,eAAe;AACpB,OAAM,EADc;AAEpB,OAAM,EAAE,MAAM,EAAR,EAFc;AAGpB,OAAM,EAAE,WAAW,EAAb,EAAiB,UAAU,EAA3B,EAA+B,UAAU,CAAzC,EAHc;AAIpB,YAAW,kCAJS;AAKpB,kBAAiB,CALG;AAMpB,QAAO;AANa,CAArB;;AASe,SAAS,OAAT,GAAqD;AAAA,KAAnC,KAAmC,yDAA3B,YAA2B;AAAA,KAAb,MAAa,yDAAJ,EAAI;;AACnE,SAAQ,OAAO,IAAf;AACC;AACC,uBAAY,KAAZ;AACC,UAAM,MADP;AAEC,UAAM,OAAO,IAFd;;AAID;AACC,uBAAY,KAAZ;AACC,UAAM,MADP;AAEC,uBACI,MAAM,IADV;;AAGC,gBAAW,OAAO,SAAP,CAAiB,GAAjB,CAAqB,UAAC,CAAD,EAAI,CAAJ;AAAA,aAAW,MAAM,CAAP,gBAAiB,CAAjB,IAAoB,WAAW,KAAK,GAAL,EAA/B,MAA8C,CAAxD;AAAA,MAArB;AAHZ;AAFD;;AASD;AACC,OAAI,YAAY,MAAM,IAAN,CAAW,SAAX,CAAqB,GAArB,CAAyB,UAAC,CAAD,EAAI,CAAJ,EAAU;AAClD,QAAI,MAAM,CAAV,EAAa;;AAEZ,yBAAY,CAAZ,IAAe,WAAW,KAAK,GAAL,EAA1B;AACA;AACD,WAAO,CAAP;AACA,IANe,CAAhB;AAOA,uBACI,KADJ;AAEC,WAAO,EAFR;AAGC,UAAM;AACL,4CAAc,MAAM,IAAN,CAAW,QAAzB,IAAmC,oBAAoB,MAAM,IAAN,CAAW,SAA/B,CAAnC,EADK;AAEL,gBAAW,UAAU,KAAV,CAAgB,CAAhB;AAFN;AAHP;;AASD;;AAEE,OAAI,OAAO,OAAO,MAAM,IAAN,CAAW,QAAX,CAAoB,GAApB,CAAwB,UAAC,CAAD;AAAA,WAAO,EAAE,IAAT;AAAA,IAAxB,CAAP,CAAX;AACD,uBACI,KADJ;AAEC,UAAM,MAFP;AAGC,cAAU,IAHX;AAIC,UAAM;AACL,WAAM,OAAO,IAAP,CAAY,OAAZ,CAAoB,WAApB,EAAiC,CAAC,OAAK,IAAN,EAAY,OAAZ,CAAoB,CAApB,CAAjC,CADD;AAEL,gBAAW;AAFN;AAJP;;AAUD;AACE,uBAAY,KAAZ;AACA,UAAM;AADN;;AAIF;AACC,uBAAY,KAAZ;AACC,qBAAiB,OAAO,QADzB;AAEC,WAAO,EAFR;;AAID;AACC,OAAI,UAAU,sBAAsB,KAAtB,CAA4B,GAA5B,CAAd;AACA,OAAI,QAAQ,MAAM,KAAlB;AACA,OAAI,OAAO,GAAP,IAAc,OAAO,GAAP,CAAW,IAAX,KAAoB,WAAtC,EAAmD;AAClD,YAAQ,MAAM,KAAN,CAAY,KAAZ,CAAkB,CAAlB,EAAqB,MAAM,KAAN,CAAY,MAAZ,GAAqB,CAA1C,CAAR;AACA,IAFD,MAEO,IAAI,QAAQ,OAAR,CAAgB,OAAO,KAAvB,MAAkC,CAAC,CAAvC,EAA0C;AAChD,YAAQ,MAAM,KAAN,GAAc,OAAO,KAA7B;AACA;AACD,uBAAY,KAAZ,IAAmB,YAAnB;AACD;AACC,UAAO,KAAP;AAlEF;AAoEA;;AAED,SAAS,mBAAT,CAA8B,SAA9B,EAAyC;AACxC,KAAI,wBAAe,UAAU,CAAV,CAAf,CAAJ,C;;AAEA,UAAS,IAAT,GAAgB,KAAK,GAAL,CAAS,KAAK,GAAL,KAAa,SAAS,SAA/B,CAAhB,C;AACA,QAAO,SAAS,SAAhB;AACC,QAAO,QAAP;AACD;;AAED,SAAS,MAAT,GAA+B;AAAA,KAAd,OAAc,yDAAJ,EAAI;;AAC9B,KAAI,IAAI,6BAAI,OAAJ,GAAa,IAAb,EAAR;AACA,KAAI,SAAS,KAAK,KAAL,CAAW,EAAE,MAAF,GAAW,CAAtB,CAAb;;AAEA,QAAO,WAAY,EAAE,MAAF,GAAW,CAAvB,GAA4B,EAAE,MAAF,CAA5B,GAAwC,CAAC,EAAE,SAAS,CAAX,IAAgB,EAAE,MAAF,CAAjB,IAA8B,CAA7E;AACA","file":"reducer.js","sourcesContent":["import generateQuestions from './generateQuestions.js'\nimport {\n\tINFO,\n\tTEST_START, TEST_CORRECT_ANSWER, TEST_DONE,\n\tROUND_START,\n\tSET_QUESTION, QUESTION_INPUT } from './actions.js'\n\nconst initialState = {\n\tmode: '',\n\tinfo: { text: '' },\n\ttest: { questions: [], answered: [], timeGoal: 0 },\n\tquestions: generateQuestions(),\n\tcurrentQuestion: 0,\n\tinput: ''\n}\n\nexport default function reducer (state = initialState, action = {}) {\n\tswitch (action.type) {\n\t\tcase INFO:\n\t\t\treturn { ...state,\n\t\t\t\tmode: 'info',\n\t\t\t\tinfo: action.info }\n\n\t\tcase TEST_START:\n\t\t\treturn { ...state,\n\t\t\t\tmode: 'test',\n\t\t\t\ttest: {\n\t\t\t\t\t...state.test,\n\t\t\t\t\t// TODO: move Date.now() to action\n\t\t\t\t\tquestions: action.questions.map((q, i) => (i === 0) ? { ...q, startTime: Date.now() } : q)\n\t\t\t\t}\n\t\t\t}\n\n\t\tcase TEST_CORRECT_ANSWER:\n\t\t\tlet questions = state.test.questions.map((q, i) => {\n\t\t\t\tif (i === 1) {\n\t\t\t\t\t// TODO: move Date.now() to action\n\t\t\t\t\treturn { ...q, startTime: Date.now() }\n\t\t\t\t}\n\t\t\t\treturn q\n\t\t\t})\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinput: '',\n\t\t\t\ttest: {\n\t\t\t\t\tanswered: [...state.test.answered, getAnsweredQuestion(state.test.questions)],\n\t\t\t\t\tquestions: questions.slice(1)\n\t\t\t\t}\n\t\t\t}\n\n\t\tcase TEST_DONE:\n\t\t  // in seconds, example 3.5\n\t\t  let time = median(state.test.answered.map((q) => q.time))\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmode: 'info',\n\t\t\t\ttimeGoal: time,\n\t\t\t\tinfo: {\n\t\t\t\t\ttext: action.text.replace(/__time__/g, (time/1000).toFixed(1)),\n\t\t\t\t\tnextState: 'round'\n\t\t\t\t}\n\t\t\t}\n\n\t\tcase ROUND_START:\n\t\t  return { ...state,\n\t\t\t\tmode: 'round'\n\t\t\t}\n\n\t\tcase SET_QUESTION:\n\t\t\treturn { ...state,\n\t\t\t\tcurrentQuestion: action.question,\n\t\t\t\tinput: '' }\n\n\t\tcase QUESTION_INPUT:\n\t\t\tvar numbers = '0 1 2 3 4 5 6 7 8 9'.split(' ')\n\t\t\tlet input = state.input\n\t\t\tif (action.key && action.key.name === 'backspace') {\n\t\t\t\tinput = state.input.slice(0, state.input.length - 1)\n\t\t\t} else if (numbers.indexOf(action.input) !== -1) {\n\t\t\t\tinput = state.input + action.input\n\t\t\t}\n\t\t\treturn { ...state, input }\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nfunction getAnsweredQuestion (questions) {\n\tlet answered = {...questions[0]}  // copy\n\t// TODO: move Date.now() to action\n\tanswered.time = Math.abs(Date.now() - answered.startTime)  // absolute, in case of jump in time\n\tdelete answered.startTime\n  return answered\n}\n\nfunction median (numbers = []) {\n\tlet n = [...numbers].sort()\n\tlet middle = Math.floor(n.length / 2)\n\t// odd -> return middle, even -> return average of middle\n\treturn middle !== (n.length / 2) ? n[middle] : (n[middle - 1] + n[middle]) / 2\n}"]}