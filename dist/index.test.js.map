{"version":3,"sources":["../src/index.test.js"],"names":[],"mappings":"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","file":"index.test.js","sourcesContent":["const test = require('ava')\nconst fork = require('child_process').fork\n\nlet context\ntest.before((t) => {\n\tconst CMD = 'index.js'\n\t// silent: true -> do not pipe child.stdout to process.stdout\n\tconst child = fork(CMD, [], { silent: true })\n\n\t// keep output history in an array\n\tconst stdout = []\n\tchild.stdout.setEncoding('utf8')\n\tchild.stdout.on('data', (d) => {\n\t\tstdout.push(d)\n\t\tconsole.log(d)\n\t})\n\n\tchild.stderr.on('data', (d) => {\n\t\tthrow new Error(d)\n\t})\n\n\t// access child and stdout array from tests\n\tcontext = { child, stdout }\n})\n\ntest.after((t) => {\n\t// terminate child\n\tif (context.child.connected) {\n\t\tcontext.child.disconnect()\n\t}\n})\n\n/**\n * These tests will run serially.\n * You can run them concurrently by using `test((t) => { ... })`.\n */\ntest.serial('gets a welcome message', async (t) => {\n\tconst { stdout } = context\n\treturn waitFor('Velkommen', stdout)\n})\n\ntest.serial('gets a question after the welcome message', async (t) => {\n\tconst { stdout, child } = context\n\t// press any key\n\tchild.stdin.write('n')\n\t// expected: num x num =\n\tlet output = await waitFor('x', stdout)\n\tt.notThrows(() => matchQuestion(output))\n})\n\ntest.serial('test: if correct answer, gets a new question', async (t) => {\n\tconst { stdout, child } = context\n\t// answer first question\n\tlet firstQuestion = last(stdout)\n\tlet answer = getAnswer(firstQuestion)\n\tchild.stdin.write(answer)\n\n\t// get next question\n\tlet nextQuestion = await waitFor('x', stdout)\n\n\tt.notThrows(() => matchQuestion(nextQuestion))\n\tt.true(firstQuestion != nextQuestion)\n})\n\ntest.serial('test: gets median time after ten questions', async (t) => {\n\tconst { stdout, child } = context\n\tlet output\n\t// answer nine questions\n\tfor (var i = 0; i < 9; ++i) {\n\t\toutput = last(stdout)\n\t\tlet answer = getAnswer(output)\n\t\tchild.stdin.write(answer)\n\t\tawait sleep(100)\n\t}\n\toutput = last(stdout)\n\tt.regex(output, /regnestykkene innen 0.1 sekunder/)\n\tchild.stdin.write('k')  // press a key to continue\n})\n\ntest.serial('game: played in rounds of 10 questions', async (t) => {\n\tconst { stdout, child } = context\n\tlet output\n\t// answer ten questions\n\tfor (var i = 0; i < 10; ++i) {\n\t\toutput = last(stdout)\n\t\tlet answer = getAnswer(output)\n\t\tchild.stdin.write(answer)\n\t\tawait sleep(101)\n\t}\n\toutput = last(stdout)\n//\tt.regex(output, /Din mediantid er [0-9\\.]+ sekunder/)\n})\n\n/**\n * Helper functions.\n */\nfunction waitFor (what = '', where = [], onlyNew = false, timeout = 1000) {\n\treturn new Promise((resolve, reject) => {\n\t\tlet t, i, l\n\t\t// check every 10 ms\n\t\tif (onlyNew) {\n\t\t\tl = what.length\n\t\t}\n\t\ti = setInterval(() => {\n\t\t\tif (onlyNew && what.length === l) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (last(where) && last(where).indexOf(what) !== -1) {\n\t\t\t\tclearTimeout(t)\n\t\t\t\tclearInterval(i)\n\t\t\t\tresolve(last(where))\n\t\t\t}\n\t\t}, 10)\n\t\t// or time out\n\t\tt = setTimeout(() => {\n\t\t\tclearInterval(i)\n\t\t\treject(`timed out after ${timeout} milliseconds, did not find \"${what}\" in \"${last(where)}\"`)\n\t\t}, timeout)\n\t})\n}\n\nfunction last (arr) {\n\treturn arr.slice(arr.length - 1)[0]\n}\n\nfunction matchQuestion (q) {\n\tlet r = new RegExp('([0-9]+) x ([0-9]+) \\=')\n\tlet m = q.match(r)\n\tif (!m || m.length !== 3) {\n\t\tthrow new Error(q + ' not an question of the form `3 x 3 =`')\n\t}\n\treturn m\n}\n\nfunction getAnswer (q) {\n\tlet m = matchQuestion(q)\n\treturn `${m[1] * m[2]}`\n}\n\nfunction sleep (time = 1) {\n\treturn new Promise((resolve) => {\n\t\tsetTimeout(resolve, time)\n\t})\n}\n"]}