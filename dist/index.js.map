{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;AAAA;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA,IAAM,QAAQ,0CAAd;;AAEA,MAAM,SAAN,CAAgB,YAAM;AACrB,QAAO,MAAM,QAAN,EAAP;AACA,CAFD;;;AAKA,IAAI,QAAQ,KAAR,CAAc,KAAlB,EAAyB;;AAExB,SAAQ,KAAR,CAAc,UAAd,CAAyB,IAAzB;AACA;AACD,mBAAS,kBAAT,CAA4B,QAAQ,KAApC;;AAEA,QAAQ,KAAR,CAAc,EAAd,CAAiB,UAAjB,EAA6B,iCAAa,KAAb,CAA7B;AACA,QAAQ,EAAR,CAAW,QAAX,EAAqB,KAAK,KAAL,CAArB;;;AAGA,MAAM,QAAN,CAAe,sBAAQ;AACtB,OAAM,8GADgB;AAEtB,YAAW;AAFW,CAAR,CAAf;;AAKA,SAAS,MAAT,OAAwD;AAAA,KAArC,IAAqC,QAArC,IAAqC;AAAA,KAA/B,KAA+B,QAA/B,KAA+B;AAAA,KAAxB,QAAwB,QAAxB,QAAwB;AAAA,KAAd,IAAc,QAAd,IAAc;AAAA,KAAR,IAAQ,QAAR,IAAQ;;AACvD,oBAAS,SAAT,CAAmB,QAAQ,MAA3B,EAAmC,CAAnC;AACA,oBAAS,QAAT,CAAkB,QAAQ,MAA1B,EAAkC,CAAlC;;AAEA,KAAI,eAAJ;AACA,KAAI,SAAS,MAAb,EAAqB;AACpB,WAAS,KAAK,IAAd;AACA,EAFD,MAEO,IAAI,SAAS,MAAT,IAAmB,KAAK,SAAL,CAAe,CAAf,CAAvB,EAA0C;AAChD,MAAM,IAAI,KAAK,SAAL,CAAe,CAAf,CAAV;AACA,MAAM,UAAW,UAAU,EAAE,MAAb,GAAuB,MAAvB,GAAgC,EAAhD;AACA,WAAS,EAAE,IAAF,GAAS,KAAT,GAAiB,OAA1B;AACA,EAJM,MAIA,IAAI,SAAS,UAAb,EAAyB;AAC/B,MAAM,WAAW,UAAU,SAAS,MAApB,GAA8B,MAA9B,GAAuC,EAAvD;AACA,WAAS,SAAS,IAAT,GAAgB,KAAhB,GAAwB,QAAjC;AACA,EAHM,MAGA;AACN,WAAS,EAAT;AACA;AACD,SAAQ,MAAR,CAAe,KAAf,CAAqB,MAArB;AACA;;AAED,SAAS,IAAT,CAAe,KAAf,EAAsB;AACrB,QAAO,YAAM;AACZ,MAAM,IAAI,MAAM,QAAN,GAAiB,SAAjB,CAA2B,MAA3B,CAAkC,UAAC,GAAD,EAAM,CAAN;AAAA,UAAY,EAAE,cAAd;AAAA,GAAlC,EAAgE,CAAhE,CAAV;AACA,UAAQ,GAAR,YAAqB,CAArB,iBAAkC,IAAI,CAAL,GAAU,OAAV,GAAoB,EAArD;AACA,UAAQ,IAAR;AACA,EAJD;AAKA","file":"index.js","sourcesContent":["import { createStore } from 'redux'\nimport readline from 'readline'\nimport reducer from './reducer.js'\nimport { inputHandler } from './inputHandlers.js'\nimport { setInfo } from './actions.js'\n\nconst store = createStore(reducer)\n\nstore.subscribe(() => {\n\trender(store.getState())\n})\n\n// set up console\nif (process.stdin.isTTY) {\n\t// not TTY if spawn from another node process\n\tprocess.stdin.setRawMode(true)\n}\nreadline.emitKeypressEvents(process.stdin)\n\nprocess.stdin.on('keypress', inputHandler(store))\nprocess.on('SIGINT', exit(store))\n\n// start game\nstore.dispatch(setInfo({\n\ttext: 'Velkommen!\\nFør vi starter, skal vi ta en test for å se hvor rask du er.\\nTrykk på en knapp for å fortsette.',\n\tnextState: 'test'\n}))\n\nfunction render ({ mode, input, question, info, test }) {\n\treadline.clearLine(process.stdout, 0)\n\treadline.cursorTo(process.stdout, 0)\n\t// console.log(store.getState())\n\tlet output\n\tif (mode === 'info') {\n\t\toutput = info.text\n\t} else if (mode === 'test' && test.questions[0]) {\n\t\tconst q = test.questions[0]\n\t\tconst correct = (input === q.answer) ? ' ✓\\n' : ''\n\t\toutput = q.text + input + correct\n\t} else if (mode === 'question') {\n\t\tconst correct = (input === question.answer) ? ' ✓\\n' : ''\n\t\toutput = question.text + input + correct\n\t} else {\n\t\toutput = ''\n\t}\n\tprocess.stdout.write(output)\n}\n\nfunction exit (store) {\n\treturn () => {\n\t\tconst c = store.getState().questions.reduce((sum, q) => q.correctAnswers, 0)\n\t\tconsole.log(`\\nGot ${c} correct${(c > 1) ? ' ones' : ''}.`)\n\t\tprocess.exit()\n\t}\n}\n"]}