{"version":3,"sources":["../src/inputHandlers.js"],"names":[],"mappings":";;;;;QAGgB,Y,GAAA,Y;QAyBA,c,GAAA,c;;AA5BhB;;AACA;;AAEO,SAAS,YAAT,CAAuB,KAAvB,EAA8B;AACpC,QAAO,UAAC,GAAD,EAAM,GAAN,EAAc;AAAA,wBACH,MAAM,QAAN,EADG;;AAAA,MACZ,IADY,mBACZ,IADY;;AAEpB,MAAI,SAAS,MAAb,EAAqB;AACpB,SAAM,QAAN,CAAe,wBAAf;;AADoB,0BAEH,MAAM,QAAN,EAFG;;AAAA,OAEZ,IAFY,oBAEZ,IAFY;;AAGpB,OAAM,cAAc,mBAAmB,KAAK,CAAL,CAAnB,CAApB;AACA,SAAM,QAAN,CAAe,0BAAY,WAAZ,CAAf;AACA,GALD,MAKO;AACN,SAAM,QAAN,CAAe,4BAAc,GAAd,EAAmB,GAAnB,CAAf;;AADM,0BAE4B,MAAM,QAAN,EAF5B;;AAAA,OAEE,KAFF,oBAEE,KAFF;AAAA,OAES,QAFT,oBAES,QAFT;AAAA,OAEmB,KAFnB,oBAEmB,IAFnB;;AAGN,OAAI,UAAU,SAAS,MAAvB,EAA+B;AAC9B;AACA,QAAM,eAAc,mBAAmB,MAAK,CAAL,CAAnB,CAApB;AACA,UAAM,QAAN,CAAe,0BAAY,YAAZ,CAAf;AACA;AACD;AACD,EAhBD;AAiBA;;AAED,SAAS,kBAAT,CAA6B,GAA7B,EAAkC;AACjC,KAAM,iBAAiB,KAAK,KAAL,CAAW,IAAI,MAAJ,GAAa,KAAK,MAAL,EAAxB,CAAvB;AACA,QAAO,IAAI,cAAJ,CAAP;AACA;;AAEM,SAAS,cAAT,CAAyB,CAAzB,EAA4B,GAA5B,EAAiC;AACvC,KAAI,IAAI,IAAJ,IAAY,IAAI,IAAJ,KAAa,GAA7B,EAAkC;AACjC,UAAQ,IAAR,CAAa,QAAQ,GAArB,EAA0B,QAA1B;AACA;AACD","file":"inputHandlers.js","sourcesContent":["import { correct } from './sounds.js'\nimport { testMode, questionInput, setQuestion } from './actions.js'\n\nexport function inputHandler (store) {\n\treturn (str, key) => {\n\t\tconst { mode } = store.getState()\n\t\tif (mode === 'info') {\n\t\t\tstore.dispatch(testMode())\n\t\t\tconst { bins } = store.getState()\n\t\t\tconst newQuestion = pickRandomQuestion(bins[0])\n\t\t\tstore.dispatch(setQuestion(newQuestion))\n\t\t} else {\n\t\t\tstore.dispatch(questionInput(str, key))\n\t\t\tconst { input, question, bins } = store.getState()\n\t\t\tif (input === question.answer) {\n\t\t\t\tcorrect()\n\t\t\t\tconst newQuestion = pickRandomQuestion(bins[0])\n\t\t\t\tstore.dispatch(setQuestion(newQuestion))\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction pickRandomQuestion (bin) {\n\tconst randomQuestion = Math.floor(bin.length * Math.random())\n\treturn bin[randomQuestion]\n}\n\nexport function listenForCtrlC (_, key) {\n\tif (key.ctrl && key.name === 'c') {\n\t\tprocess.kill(process.pid, 'SIGINT')\n\t}\n}\n"]}